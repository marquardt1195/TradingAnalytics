"0","## Function to merge trades with yahoo finance"
"0","mergeTradesWithYahoo <- function(symbol, fromDate, addPercentChange) {"
"0","  data <- getSymbols(symbol, src = ""yahoo"", from = fromDate, auto.assign = FALSE)"
"0","  yahoo_dates <- index(data)"
"0","  "
"0","  # Create a data frame with dates and the symbol"
"0","  yahoo_data <- data.frame(Date = yahoo_dates, Symbol = symbol, data)"
"0","  mergedTable <- merge(addPercentChange, yahoo_data, by = ""Symbol"", all.x = TRUE)"
"0","  "
"0","  column_name <- paste0(symbol, "".Low"")"
"0","  end_index <- which(yahoo_data[[column_name]] < addPercentChange$fourPercentLoss)[1]"
"0","  "
"0","  # If no such index is found, set end_date to the last date"
"0","  if (is.na(end_index)) {"
"0","    end_date <- max(yahoo_data$Date)"
"0","  } else {"
"0","    end_date <- yahoo_data$Date[end_index]"
"0","  }"
"0","  "
"0","  # Filter the data based on the dynamic end date"
"0","  mergedTable <- mergedTable %>%"
"0","    filter(Date <= end_date)"
"0","  "
"0","  return(mergedTable)"
"0","}"
"0",""
"0","startDates <- list()"
"0",""
"0","for (i in 1:nrow(addPercentChange)) {"
"0","  symbol <- addPercentChange$Symbol[i]"
"0","  Id <- addPercentChange$Id[i]"
"0","  "
"0","  # Check if start date for this Id exists, if not, set it"
"0","  if (!(as.character(Id) %in% names(startDates))) {"
"0","    startDates[[as.character(Id)]] <- addPercentChange$tradeStartDate2[i]"
"0","  }"
"0","  "
"0","  fromDate <- startDates[[as.character(Id)]]"
"0","  "
"0","  # Retrieve and merge data for the current symbol"
"0","  mergedTable <- mergeTradesWithYahoo(symbol, fromDate, addPercentChange[i, , drop = FALSE])"
"0","  "
"0","  # Assign the merged table to a variable with a unique name"
"0","  assign(paste(""merged_"", symbol, ""_Id_"", Id, sep = """"), mergedTable)"
"0","  "
"0","  ## Add to results table"
"0","  max_upside_name <- grep(paste0(symbol, "".High""), names(mergedTable), value = TRUE)"
"0","  "
"0","  max_upside <- max(mergedTable[[max_upside_name]])"
"0","  "
"0","  stop_loss <- addPercentChange$fourPercentLoss[i]"
"0","  "
"0","  max_upside_index <- which.max(mergedTable[[max_upside_name]])"
"0","  "
"0","  number_days_reached_max <- max_upside_index"
"0","  number_days_until_stopped <- length(mergedTable$Date)"
"0","  "
"0","  max_upside_percent <- ((max_upside - stop_loss)/stop_loss)*100"
"0","  "
"0","  # Create a new results table with the calculated value"
"0","  resultsTable <- data.frame("
"0","    Id = Id, "
"0","    Symbol = symbol, "
"0","    MaxPrice = max_upside, "
"0","    StopLoss = stop_loss, "
"0","    DaysUntilStopped = number_days_until_stopped, "
"0","    DaysReachedMax = number_days_reached_max,"
"0","    MaxUpside = max_upside_percent"
"0","    )"
"0","  "
"0","  # Store the results table"
"0","  resultsTableName <- paste(""results_"", symbol, ""_Id_"", Id, sep = """")"
"0","  assign(resultsTableName, resultsTable)"
"0","  "
"0","  # Update the start date if the next Id is different"
"0","  if (i < nrow(addPercentChange) && addPercentChange$Id[i+1] != Id) {"
"0","    nextId <- addPercentChange$Id[i+1]"
"0","    startDates[[as.character(nextId)]] <- addPercentChange$tradeStartDate2[i+1]"
"0","  }"
"0","}"
"0",""
"0","# Accessing each merged table and results table"
"0","for (symbol in addPercentChange$Symbol) {"
"0","  for (Id in unique(addPercentChange$Id[addPercentChange$Symbol == symbol])) {"
"0","    mergedTableName <- paste(""merged_"", symbol, ""_Id_"", Id, sep = """")"
"0","    resultsTableName <- paste(""results_"", symbol, ""_Id_"", Id, sep = """")"
"0","    "
"0","    print(paste(""Merged table:"", mergedTableName))"
"0","    print(head(get(mergedTableName)))"
"0","    "
"0","    print(paste(""Results table:"", resultsTableName))"
"0","    print(head(get(resultsTableName)))"
"0","  }"
"0","}"
"1","[1]"
"1"," ""Merged table: merged_ABNB_Id_1"""
"1","
"
