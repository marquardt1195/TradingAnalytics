"0","## Use an arbitrary amount of time (t + 6days) to determine if adding to a trade or new trade.."
"0","## If you buy the stock and buy it again within 6 days, it is considered an ""add"" and defined as the same trade."
"0","addDates <- cleanedData %>% "
"0","  group_by(Symbol) %>% "
"0","  mutate("
"0","    tradeStartDate = as.Date(min(Date.Acquired)),"
"0","    addWindow = floor_date(tradeStartDate, ""day"") + days(6),"
"0","    tradeEndDate = max(Date.Sold)"
"0","  ) %>% "
"0","  select(Symbol, Quantity, Date.Acquired, Date.Sold, everything()) "
"0",""
"0","## Use dates to group trades"
"0","addStartDate <- addDates %>% "
"0","  mutate("
"0","    transactionType = ifelse(Date.Acquired <= addWindow & Date.Acquired + days(6) >= addWindow, ""same_trade"", ""new_trade""),"
"0","    tradeStartDate2 = as.Date(ifelse(transactionType == ""new_trade"", Date.Acquired, tradeStartDate)),"
"0","    buyPrice = Cost.Basis/Quantity,"
"0","    sellPrice = Proceeds/Quantity"
"0","  ) %>% "
"0","  arrange(Symbol, tradeStartDate2) %>% "
"0","  group_by(Symbol) %>%"
"0","  ungroup() %>%"
"0","  select(Symbol, Quantity, tradeStartDate2, Date.Acquired, tradeEndDate, Date.Sold, Cost.Basis, Proceeds, buyPrice, sellPrice)"
"0",""
"0","## Add Id's to grouped trades"
"0","addIds <- addStartDate %>% "
"0","  mutate("
"0","    Id = cumsum(c(1, diff(data.table::rleid(tradeStartDate2)) != 0))"
"0","  ) %>% "
"0","  select(Id, everything())"
"0",""
"0","## Calculate weighted averages for trades"
"0","addWeightAvg <- addIds %>%"
"0","  group_by(Id) %>% "
"0","  mutate("
"0","    weightAvgBuy = (sum(buyPrice*Quantity)/sum(Quantity)),"
"0","    weightAvgSell = (sum(sellPrice*Quantity)/sum(Quantity))"
"0","  ) %>% "
"0","  select(-Cost.Basis, -Proceeds, -buyPrice, -sellPrice, -Date.Acquired, -Date.Sold, -Quantity)"
"0",""
"0","## Calculate percent gain or loss per trade"
"0","addPercentChange <- addWeightAvg %>% "
"0","  group_by(Id) %>% "
"0","  mutate("
"0","    percentChange = ((weightAvgSell - weightAvgBuy)/weightAvgBuy)*100,"
"0","    fourPercentLoss = weightAvgBuy*0.96"
"0","  ) %>% "
"0","  distinct(Id, .keep_all = TRUE)"
"0",""
"0","## Store winners and losers"
"0","winningTrades <- addPercentChange %>% "
"0","  filter(percentChange > 0)"
"0",""
"0","losingTrades <- addPercentChange %>%"
"0","  filter(percentChange < 0)"
"0",""
